basePath: /
definitions:
  dto.LinkDTO:
    description: Link information
    properties:
      banned:
        type: boolean
      created_at:
        example: "2024-04-22T10:10:10Z"
        type: string
      description:
        type: string
      expire_at:
        type: string
      id:
        type: integer
      slug:
        type: string
      target_url:
        type: string
      updated_at:
        example: "2024-04-22T10:10:10Z"
        type: string
      visits:
        type: integer
    type: object
  handlers.Login:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  model.Link:
    properties:
      banned:
        type: boolean
      created_at:
        type: string
      description:
        type: string
      expire_at:
        type: string
      id:
        type: integer
      slug:
        type: string
      target_url:
        type: string
      updated_at:
        type: string
    type: object
info:
  contact: {}
  description: This is the Tikkin API documentation.
  title: Tikkin API
  version: "1.0"
paths:
  /api/v1/auth/login:
    post:
      consumes:
      - application/json
      description: login endpoint
      parameters:
      - description: login
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/handlers.Login'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.Login'
      summary: Login
      tags:
      - auth
  /api/v1/auth/signup:
    post:
      consumes:
      - application/json
      description: Register a new user
      parameters:
      - description: login
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/handlers.Login'
      produces:
      - application/json
      responses:
        "201":
          description: Created
      summary: Registers a new user
      tags:
      - auth
  /api/v1/links:
    get:
      consumes:
      - application/json
      description: Get all links for the authenticated user
      parameters:
      - description: Page number
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.LinkDTO'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Get all links
      tags:
      - links
    post:
      consumes:
      - application/json
      description: Create a new link
      parameters:
      - description: Link
        in: body
        name: link
        required: true
        schema:
          $ref: '#/definitions/model.Link'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Link'
      security:
      - ApiKeyAuth: []
      summary: Create a new link
      tags:
      - links
  /api/v1/links/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a link
      parameters:
      - description: Link ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - ApiKeyAuth: []
      summary: Delete a link
      tags:
      - links
  /api/v1/users/verify/{token}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Verification token
        in: path
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Verify user after registration
      tags:
      - users
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
