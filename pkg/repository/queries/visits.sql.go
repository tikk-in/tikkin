// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: visits.sql

package queries

import (
	"context"
)

const countVisitsByLinkID = `-- name: CountVisitsByLinkID :one
SELECT COUNT(*)
FROM visits
WHERE link_id = $1
`

func (q *Queries) CountVisitsByLinkID(ctx context.Context, linkID int64) (int64, error) {
	row := q.db.QueryRow(ctx, countVisitsByLinkID, linkID)
	var count int64
	err := row.Scan(&count)
	return count, err
}

const insertVisit = `-- name: InsertVisit :one
INSERT INTO visits (id, link_id, user_agent, referrer, country_code)
VALUES ($1, $2, $3, $4, $5)
RETURNING id, link_id, created_at, user_agent, referrer, country_code
`

type InsertVisitParams struct {
	ID          string
	LinkID      int64
	UserAgent   *string
	Referrer    *string
	CountryCode *string
}

func (q *Queries) InsertVisit(ctx context.Context, arg InsertVisitParams) (Visit, error) {
	row := q.db.QueryRow(ctx, insertVisit,
		arg.ID,
		arg.LinkID,
		arg.UserAgent,
		arg.Referrer,
		arg.CountryCode,
	)
	var i Visit
	err := row.Scan(
		&i.ID,
		&i.LinkID,
		&i.CreatedAt,
		&i.UserAgent,
		&i.Referrer,
		&i.CountryCode,
	)
	return i, err
}
